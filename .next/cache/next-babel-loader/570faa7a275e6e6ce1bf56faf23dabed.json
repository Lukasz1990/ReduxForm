{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Magdalena\\\\Desktop\\\\reduxAPI\\\\tooploox\\\\components\\\\UserForm.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from 'styled-components';\nimport { Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport Button from './Button';\nimport { useState } from 'react';\nconst S = {\n  UserForm: styled.div.withConfig({\n    displayName: \"UserForm\",\n    componentId: \"sc-1quoytg-0\"\n  })([\"background-color:#fff;\"]),\n  Content: styled.div.withConfig({\n    displayName: \"UserForm__Content\",\n    componentId: \"sc-1quoytg-1\"\n  })([\"max-width:1200px;margin:0 auto;display:flex;flex-direction:column;justify-content:center;align-items:center;height:300px;padding:15px;\"]),\n  FormGroup: styled(FormGroup).withConfig({\n    displayName: \"UserForm__FormGroup\",\n    componentId: \"sc-1quoytg-2\"\n  })([\"margin:15px;display:flex;flex-direction:row;justify-content:flex-start;align-items:center;input{border-radius:20px 20px 20px 20px;font-weight:400;font-style:normal;font-size:14px;outline-style:none;background-color:transparent;color:rgba(58,67,68,0.6);padding-left:30px;height:40px;margin-left:10px;flex:2}\"]),\n  Input: styled(Input).withConfig({\n    displayName: \"UserForm__Input\",\n    componentId: \"sc-1quoytg-3\"\n  })([\"\"]),\n  FormGroupText: styled(FormGroup).withConfig({\n    displayName: \"UserForm__FormGroupText\",\n    componentId: \"sc-1quoytg-4\"\n  })([\"margin:15px;display:flex;flex-direction:row;justify-content:flex-start;align-items:center;\"]),\n  TextInput: styled(Input).withConfig({\n    displayName: \"UserForm__TextInput\",\n    componentId: \"sc-1quoytg-5\"\n  })([\"font-weight:400;font-style:normal;padding-left:30px;height:40px;margin-left:5px;align-items:center;margin:0 auto;\"]) // InputGroupAddon: styled(InputGroupAddon)`\n  //     font-size:16px;\n  //     font-weight:600;\n  //     font-style: normal;\n  //     margin-bottom:10px;\n  //     margin-top:10px;\n  // `,\n\n};\n\nconst UserForm = ({\n  onSubmit\n}) => {\n  const emailRef = React.createRef();\n  const heroProfecyRef = React.createRef();\n  const heroIntroRef = React.createRef();\n  const heroMagicRef = React.createRef();\n  const {\n    0: emailValue,\n    1: setEmailValue\n  } = useState('');\n  const {\n    0: heroProfecyValue,\n    1: setHeroProfecyValue\n  } = useState('');\n  const {\n    0: magicValue,\n    1: setMagicValue\n  } = useState(''); // const [emailValue, setEmailValue] = useState('')\n\n  const onSubmitHandler = event => {\n    event.preventDefault();\n    onSubmit({\n      email: emailValue,\n      userId: Math.random,\n      hero_profecy: heroProfecyValue,\n      hero_intro: 'value',\n      hero_magic: magicValue,\n      accepted: false\n    });\n  };\n\n  return __jsx(S.UserForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, __jsx(S.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, __jsx(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, __jsx(S.FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, __jsx(Label, {\n    for: \"exampleEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Email\"), __jsx(Input, {\n    type: \"email\",\n    name: \"email\",\n    id: \"exampleEmail\",\n    placeholder: \"with a placeholder\",\n    value: emailValue,\n    onChange: e => setEmailValue(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })), __jsx(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, __jsx(Label, {\n    for: \"exampleSelect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Select your hero profecy\"), __jsx(S.Input, {\n    type: \"select\",\n    name: \"select\",\n    id: \"exampleSelect\",\n    value: heroProfecyValue,\n    onChange: e => setHeroProfecyValue(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Necromancer\"), __jsx(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Beastmaster\"), __jsx(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Druid\"), __jsx(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Alchemic\"), __jsx(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Witch\"), __jsx(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Knight\"), __jsx(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Overlord\"))), __jsx(S.FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, __jsx(Label, {\n    for: \"exampleText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Introduce your hero :)\"), __jsx(S.TextInput, {\n    type: \"textarea\",\n    name: \"text\",\n    id: \"exampleText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  })), __jsx(FormGroup, {\n    tag: \"fieldset\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, __jsx(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Choose Magic\"), __jsx(FormGroup, {\n    check: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, __jsx(Label, {\n    check: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, __jsx(Input, {\n    type: \"radio\",\n    name: \"radio1\",\n    value: \"Earth Magic\",\n    onChange: e => setMagicValue(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), ' ', \"Earth Magic\")), __jsx(FormGroup, {\n    check: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, __jsx(Label, {\n    check: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, __jsx(Input, {\n    type: \"radio\",\n    name: \"radio1\",\n    value: \"Water Magic\",\n    onChange: e => setMagicValue(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), ' ', \"Water Magic\")), __jsx(FormGroup, {\n    check: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, __jsx(Label, {\n    check: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, __jsx(Input, {\n    type: \"radio\",\n    name: \"radio1\",\n    value: \"Air Magic\",\n    onChange: e => setMagicValue(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }), ' ', \"Air Magic\")), __jsx(FormGroup, {\n    check: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, __jsx(Label, {\n    check: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, __jsx(Input, {\n    type: \"radio\",\n    name: \"radio1\",\n    value: \"Fire Magic\",\n    onChange: e => setMagicValue(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }), ' ', \"Fire Magic\"))), __jsx(FormGroup, {\n    check: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, __jsx(Label, {\n    check: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, __jsx(Input, {\n    type: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }), ' ', \"Accept all changes\")), __jsx(Button, {\n    OnClick: event => onSubmitHandler(event),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"Submit\"))));\n};\n\nexport default UserForm;","map":{"version":3,"sources":["C:\\Users\\Magdalena\\Desktop\\reduxAPI\\tooploox\\components\\UserForm.js"],"names":["styled","Form","FormGroup","Label","Input","FormText","Button","useState","S","UserForm","div","Content","FormGroupText","TextInput","onSubmit","emailRef","React","createRef","heroProfecyRef","heroIntroRef","heroMagicRef","emailValue","setEmailValue","heroProfecyValue","setHeroProfecyValue","magicValue","setMagicValue","onSubmitHandler","event","preventDefault","email","userId","Math","random","hero_profecy","hero_intro","hero_magic","accepted","e","target","value"],"mappings":"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","sourcesContent":["import styled from 'styled-components'\r\nimport { Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\nimport Button from './Button'\r\nimport { useState } from 'react'\r\n\r\nconst S = {\r\n  UserForm: styled.div`\r\n    background-color: #fff;\r\n  `,\r\n\r\n  Content: styled.div`\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    flex-direction:column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 300px;\r\n    padding:15px;\r\n  `,\r\n\r\n  FormGroup: styled(FormGroup)`\r\n      margin:15px;\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content:flex-start;\r\n      align-items:center;\r\n\r\n    input {\r\n      border-radius: 20px 20px 20px 20px;\r\n      font-weight: 400;\r\n      font-style: normal;\r\n      font-size: 14px;\r\n      outline-style: none;\r\n      background-color: transparent;\r\n      color: rgba(58, 67, 68, 0.6);\r\n      padding-left: 30px;\r\n      height:40px;\r\n      margin-left:10px;\r\n      flex:2\r\n    }\r\n  `,\r\n  Input: styled(Input)`\r\n    \r\n  `,\r\n  FormGroupText: styled(FormGroup)`\r\n      margin:15px;\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content:flex-start;\r\n      align-items:center;\r\n  `,\r\n  TextInput: styled(Input)`\r\n      \r\n      font-weight: 400;\r\n      font-style: normal;\r\n      padding-left: 30px;\r\n      height:40px;\r\n      margin-left:5px;\r\n      align-items:center;\r\n      margin:0 auto;\r\n  `\r\n  \r\n  // InputGroupAddon: styled(InputGroupAddon)`\r\n  //     font-size:16px;\r\n  //     font-weight:600;\r\n  //     font-style: normal;\r\n  //     margin-bottom:10px;\r\n  //     margin-top:10px;\r\n  // `,\r\n}\r\n\r\nconst UserForm =  ({ onSubmit, }) => {\r\n\r\n  const emailRef = React.createRef()\r\n  const heroProfecyRef = React.createRef()\r\n  const heroIntroRef = React.createRef()\r\n  const heroMagicRef = React.createRef()\r\n\r\n  const [emailValue, setEmailValue] = useState('')\r\n  const [heroProfecyValue, setHeroProfecyValue] = useState('')\r\n  const [magicValue, setMagicValue] = useState('')\r\n  // const [emailValue, setEmailValue] = useState('')\r\n\r\n\r\n\r\nconst onSubmitHandler = (event)=> {\r\n  event.preventDefault()\r\n  onSubmit({\r\n      email: emailValue,\r\n      userId: Math.random,\r\n      hero_profecy: heroProfecyValue,\r\n      hero_intro:'value',\r\n      hero_magic: magicValue,\r\n      accepted: false\r\n    })\r\n  }\r\n\r\n    return (\r\n    <S.UserForm>\r\n      <S.Content>\r\n        <Form>\r\n        <S.FormGroup>\r\n          <Label for=\"exampleEmail\">Email</Label>\r\n        <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"with a placeholder\" value={emailValue} onChange={(e)=>setEmailValue(e.target.value)} />\r\n        </S.FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"exampleSelect\">Select your hero profecy</Label>\r\n          <S.Input type=\"select\" name=\"select\" id=\"exampleSelect\" value={heroProfecyValue} onChange={(e)=>setHeroProfecyValue(e.target.value)}>\r\n            <option>Necromancer</option>\r\n            <option>Beastmaster</option>\r\n            <option>Druid</option>\r\n            <option>Alchemic</option>\r\n            <option>Witch</option>\r\n            <option>Knight</option>\r\n            <option>Overlord</option>\r\n          </S.Input>\r\n        </FormGroup>\r\n        <S.FormGroup>\r\n          <Label for=\"exampleText\">Introduce your hero :)</Label>\r\n          <S.TextInput type=\"textarea\" name=\"text\" id=\"exampleText\" />\r\n        </S.FormGroup>\r\n        <FormGroup tag=\"fieldset\">\r\n          <legend>Choose Magic</legend>\r\n          <FormGroup check>\r\n            <Label check>\r\n              <Input type=\"radio\" name=\"radio1\"  value='Earth Magic' onChange={(e)=>setMagicValue(e.target.value)}/>{' '}\r\n              Earth Magic\r\n            </Label>\r\n          </FormGroup>\r\n          <FormGroup check>\r\n            <Label check>\r\n              <Input type=\"radio\" name=\"radio1\" value='Water Magic' onChange={(e)=>setMagicValue(e.target.value)} />{' '}\r\n              Water Magic\r\n            </Label>\r\n          </FormGroup>\r\n          <FormGroup check>\r\n            <Label check>\r\n              <Input type=\"radio\" name=\"radio1\" value='Air Magic' onChange={(e)=>setMagicValue(e.target.value)}/>{' '}\r\n              Air Magic\r\n            </Label>\r\n          </FormGroup>\r\n          <FormGroup check>\r\n            <Label check>\r\n              <Input type=\"radio\" name=\"radio1\" value='Fire Magic' onChange={(e)=>setMagicValue(e.target.value)}/>{' '}\r\n              Fire Magic\r\n            </Label>\r\n          </FormGroup>\r\n        </FormGroup>\r\n        <FormGroup check>\r\n          <Label check>\r\n            <Input type=\"checkbox\" />{' '}\r\n            Accept all changes\r\n          </Label>\r\n        </FormGroup>\r\n        <Button OnClick={(event)=>onSubmitHandler(event)}>Submit</Button>\r\n      </Form>\r\n    </S.Content>\r\n  </S.UserForm> \r\n    )\r\n   }\r\n\r\n\r\nexport default UserForm"]},"metadata":{},"sourceType":"module"}