{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Magdalena\\\\Desktop\\\\reduxAPI\\\\tooploox\\\\components\\\\UserForm.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from 'styled-components';\nimport { Form, FormGroup, Label, Input } from 'reactstrap';\nimport Button from './Button';\nimport { useState } from 'react';\nconst S = {\n  UserForm: styled.div.withConfig({\n    displayName: \"UserForm\",\n    componentId: \"sc-1quoytg-0\"\n  })([\"background-color:#fff;\"]),\n  Content: styled.div.withConfig({\n    displayName: \"UserForm__Content\",\n    componentId: \"sc-1quoytg-1\"\n  })([\"max-width:1200px;margin:0 auto;display:flex;flex-direction:column;justify-content:center;align-items:center;height:300px;padding:15px;\"]),\n  FormGroup: styled(FormGroup).withConfig({\n    displayName: \"UserForm__FormGroup\",\n    componentId: \"sc-1quoytg-2\"\n  })([\"margin:15px;display:flex;flex-direction:column;justify-content:flex-start;align-items:center;input{border-radius:20px 20px 20px 20px;font-weight:400;font-style:normal;font-size:14px;outline-style:none;background-color:transparent;color:rgba(58,67,68,0.6);padding-left:30px;height:40px;margin-left:10px;flex:2}\"]),\n  Input: styled(Input).withConfig({\n    displayName: \"UserForm__Input\",\n    componentId: \"sc-1quoytg-3\"\n  })([\"\"]),\n  FormGroupText: styled(FormGroup).withConfig({\n    displayName: \"UserForm__FormGroupText\",\n    componentId: \"sc-1quoytg-4\"\n  })([\"margin:15px;display:flex;flex-direction:row;justify-content:flex-start;align-items:center;\"]),\n  TextInput: styled(Input).withConfig({\n    displayName: \"UserForm__TextInput\",\n    componentId: \"sc-1quoytg-5\"\n  })([\"font-weight:400;font-style:normal;padding-left:30px;height:40px;margin-left:5px;align-items:center;margin:0 auto;\"])\n};\n\nconst UserForm = ({\n  onSubmit\n}) => {\n  // const emailRef = React.createRef()\n  // const heroProfecyRef = React.createRef()\n  // const heroIntroRef = React.createRef()\n  // const heroMagicRef = React.createRef()\n  const {\n    0: emailValue,\n    1: setEmailValue\n  } = useState('');\n  const {\n    0: heroProfecyValue,\n    1: setHeroProfecyValue\n  } = useState();\n  const {\n    0: magicValue,\n    1: setMagicValue\n  } = useState('');\n  const {\n    0: heroIntroValue,\n    1: setHeroIntroValue\n  } = useState('');\n  const {\n    0: checkData,\n    1: setCheckData\n  } = useState('');\n  const disabled = emailValue && heroProfecyValue && magicValue && heroIntroValue && checkData ? false : true;\n\n  const onSubmitHandler = event => {\n    event.preventDefault();\n    onSubmit({\n      email: emailValue,\n      userId: Math.random(),\n      hero_profecy: heroProfecyValue,\n      hero_intro: heroIntroValue,\n      hero_magic: magicValue,\n      checked: checkData\n    });\n    alert('User added');\n  };\n\n  return __jsx(S.UserForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, __jsx(S.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, __jsx(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, __jsx(S.FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, __jsx(Label, {\n    for: \"exampleEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Email\"), __jsx(Input, {\n    type: \"email\",\n    name: \"email\",\n    id: \"exampleEmail\",\n    placeholder: \"with a placeholder\",\n    value: emailValue,\n    onChange: e => setEmailValue(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })), __jsx(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, __jsx(Label, {\n    for: \"exampleSelect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Select your hero profecy\"), __jsx(S.Input, {\n    type: \"select\",\n    name: \"select\",\n    id: \"exampleSelect\",\n    value: heroProfecyValue,\n    onChange: e => setHeroProfecyValue(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Necromancer\"), __jsx(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Beastmaster\"), __jsx(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Druid\"), __jsx(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Alchemic\"), __jsx(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Witch\"), __jsx(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Knight\"), __jsx(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Overlord\"))), __jsx(S.FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, __jsx(Label, {\n    for: \"exampleText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Introduce your hero \"), __jsx(S.TextInput, {\n    type: \"textarea\",\n    name: \"text\",\n    id: \"exampleText\",\n    value: heroIntroValue,\n    onChange: e => setHeroIntroValue(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })), __jsx(FormGroup, {\n    tag: \"fieldset\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, __jsx(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Choose Magic\"), __jsx(FormGroup, {\n    check: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, __jsx(Label, {\n    check: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, __jsx(Input, {\n    type: \"radio\",\n    name: \"radio1\",\n    value: \"Earth Magic\",\n    onChange: e => setMagicValue(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), ' ', \"Earth Magic\")), __jsx(FormGroup, {\n    check: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, __jsx(Label, {\n    check: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, __jsx(Input, {\n    type: \"radio\",\n    name: \"radio1\",\n    value: \"Water Magic\",\n    onChange: e => setMagicValue(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }), ' ', \"Water Magic\")), __jsx(FormGroup, {\n    check: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, __jsx(Label, {\n    check: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, __jsx(Input, {\n    type: \"radio\",\n    name: \"radio1\",\n    value: \"Air Magic\",\n    onChange: e => setMagicValue(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }), ' ', \"Air Magic\")), __jsx(FormGroup, {\n    check: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, __jsx(Label, {\n    check: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, __jsx(Input, {\n    type: \"radio\",\n    name: \"radio1\",\n    value: \"Fire Magic\",\n    onChange: e => setMagicValue(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), ' ', \"Fire Magic\"))), __jsx(FormGroup, {\n    check: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, __jsx(Label, {\n    check: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, __jsx(Input, {\n    type: \"checkbox\",\n    onChange: () => setCheckData(!checkData),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }), ' ', \"Accept all changes\")), __jsx(Button, {\n    disabled: disabled,\n    OnClick: event => onSubmitHandler(event),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Submit\"))));\n};\n\nexport default UserForm;","map":{"version":3,"sources":["C:\\Users\\Magdalena\\Desktop\\reduxAPI\\tooploox\\components\\UserForm.js"],"names":["styled","Form","FormGroup","Label","Input","Button","useState","S","UserForm","div","Content","FormGroupText","TextInput","onSubmit","emailValue","setEmailValue","heroProfecyValue","setHeroProfecyValue","magicValue","setMagicValue","heroIntroValue","setHeroIntroValue","checkData","setCheckData","disabled","onSubmitHandler","event","preventDefault","email","userId","Math","random","hero_profecy","hero_intro","hero_magic","checked","alert","e","target","value"],"mappings":"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","sourcesContent":["import styled from 'styled-components'\r\nimport { Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport Button from './Button'\r\nimport { useState } from 'react'\r\n\r\nconst S = {\r\n  UserForm: styled.div`\r\n    background-color: #fff;\r\n  `,\r\n\r\n  Content: styled.div`\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    flex-direction:column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 300px;\r\n    padding:15px;\r\n  `,\r\n\r\n  FormGroup: styled(FormGroup)`\r\n      margin:15px;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content:flex-start;\r\n      align-items:center;\r\n\r\n    input {\r\n      border-radius: 20px 20px 20px 20px;\r\n      font-weight: 400;\r\n      font-style: normal;\r\n      font-size: 14px;\r\n      outline-style: none;\r\n      background-color: transparent;\r\n      color: rgba(58, 67, 68, 0.6);\r\n      padding-left: 30px;\r\n      height:40px;\r\n      margin-left:10px;\r\n      flex:2\r\n    }\r\n  `,\r\n  Input: styled(Input)`\r\n    \r\n  `,\r\n  FormGroupText: styled(FormGroup)`\r\n      margin:15px;\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content:flex-start;\r\n      align-items:center;\r\n  `,\r\n  TextInput: styled(Input)`\r\n      \r\n      font-weight: 400;\r\n      font-style: normal;\r\n      padding-left: 30px;\r\n      height:40px;\r\n      margin-left:5px;\r\n      align-items:center;\r\n      margin:0 auto;\r\n  `\r\n}\r\n\r\nconst UserForm =  ({ onSubmit, }) => {\r\n\r\n  // const emailRef = React.createRef()\r\n  // const heroProfecyRef = React.createRef()\r\n  // const heroIntroRef = React.createRef()\r\n  // const heroMagicRef = React.createRef()\r\n\r\n  const [emailValue, setEmailValue] = useState('')\r\n  const [heroProfecyValue, setHeroProfecyValue] = useState()\r\n  const [magicValue, setMagicValue] = useState('')\r\n  const [heroIntroValue, setHeroIntroValue] = useState('')\r\n  const [checkData, setCheckData] = useState('')\r\n\r\n  const disabled = (emailValue && heroProfecyValue && magicValue && heroIntroValue && checkData) ? false : true\r\n\r\n\r\nconst onSubmitHandler = (event)=> {\r\n  event.preventDefault()\r\n  onSubmit({\r\n      email: emailValue,\r\n      userId: Math.random(),\r\n      hero_profecy: heroProfecyValue,\r\n      hero_intro: heroIntroValue,\r\n      hero_magic: magicValue,\r\n      checked: checkData\r\n    })\r\n    alert('User added')\r\n  }\r\n\r\n    return (\r\n    <S.UserForm>\r\n      <S.Content>\r\n        <Form>\r\n        <S.FormGroup>\r\n          <Label for=\"exampleEmail\">Email</Label>\r\n        <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"with a placeholder\" value={emailValue} onChange={(e)=>setEmailValue(e.target.value)} />\r\n        </S.FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"exampleSelect\">Select your hero profecy</Label>\r\n          <S.Input type=\"select\" name=\"select\" id=\"exampleSelect\" value={heroProfecyValue} onChange={(e)=>setHeroProfecyValue(e.target.value)}>\r\n            <option>Necromancer</option>\r\n            <option>Beastmaster</option>\r\n            <option>Druid</option>\r\n            <option>Alchemic</option>\r\n            <option>Witch</option>\r\n            <option>Knight</option>\r\n            <option>Overlord</option>\r\n          </S.Input>\r\n        </FormGroup>\r\n        <S.FormGroup>\r\n          <Label for=\"exampleText\">Introduce your hero </Label>\r\n          <S.TextInput type=\"textarea\" name=\"text\" id=\"exampleText\" value={heroIntroValue} onChange={(e)=>setHeroIntroValue(e.target.value)} />\r\n        </S.FormGroup>\r\n        <FormGroup tag=\"fieldset\">\r\n          <legend>Choose Magic</legend>\r\n          <FormGroup check>\r\n            <Label check>\r\n              <Input type=\"radio\" name=\"radio1\"  value='Earth Magic' onChange={(e)=>setMagicValue(e.target.value)}/>{' '}\r\n              Earth Magic\r\n            </Label>\r\n          </FormGroup>\r\n          <FormGroup check>\r\n            <Label check>\r\n              <Input type=\"radio\" name=\"radio1\" value='Water Magic' onChange={(e)=>setMagicValue(e.target.value)} />{' '}\r\n              Water Magic\r\n            </Label>\r\n          </FormGroup>\r\n          <FormGroup check>\r\n            <Label check>\r\n              <Input type=\"radio\" name=\"radio1\" value='Air Magic' onChange={(e)=>setMagicValue(e.target.value)}/>{' '}\r\n              Air Magic\r\n            </Label>\r\n          </FormGroup>\r\n          <FormGroup check>\r\n            <Label check>\r\n              <Input type=\"radio\" name=\"radio1\" value='Fire Magic' onChange={(e)=>setMagicValue(e.target.value)}/>{' '}\r\n              Fire Magic\r\n            </Label>\r\n          </FormGroup>\r\n        </FormGroup>\r\n        <FormGroup check>\r\n          <Label check>\r\n            <Input type=\"checkbox\"  onChange={()=>setCheckData(!checkData)} />{' '}\r\n            Accept all changes\r\n          </Label>\r\n        </FormGroup>\r\n        <Button disabled={disabled} OnClick={(event)=>onSubmitHandler(event)}>Submit</Button>\r\n      </Form>\r\n    </S.Content>\r\n  </S.UserForm> \r\n    )\r\n   }\r\n\r\n\r\nexport default UserForm"]},"metadata":{},"sourceType":"module"}