{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.cad1fc7b27e37cda09bb.hot-update.js","sources":["webpack:///./components/UserForm.js"],"sourcesContent":["import styled from 'styled-components'\r\nimport { Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\nimport Button from './Button'\r\nimport { useState } from 'react'\r\n\r\nconst S = {\r\n  UserForm: styled.div`\r\n    background-color: #fff;\r\n  `,\r\n\r\n  Content: styled.div`\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    flex-direction:column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 300px;\r\n    padding:15px;\r\n  `,\r\n\r\n  FormGroup: styled(FormGroup)`\r\n      margin:15px;\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content:flex-start;\r\n      align-items:center;\r\n\r\n    input {\r\n      border-radius: 20px 20px 20px 20px;\r\n      font-weight: 400;\r\n      font-style: normal;\r\n      font-size: 14px;\r\n      outline-style: none;\r\n      background-color: transparent;\r\n      color: rgba(58, 67, 68, 0.6);\r\n      padding-left: 30px;\r\n      height:40px;\r\n      margin-left:10px;\r\n      flex:2\r\n    }\r\n  `,\r\n  Input: styled(Input)`\r\n    \r\n  `,\r\n  FormGroupText: styled(FormGroup)`\r\n      margin:15px;\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content:flex-start;\r\n      align-items:center;\r\n  `,\r\n  TextInput: styled(Input)`\r\n      \r\n      font-weight: 400;\r\n      font-style: normal;\r\n      padding-left: 30px;\r\n      height:40px;\r\n      margin-left:5px;\r\n      align-items:center;\r\n      margin:0 auto;\r\n  `\r\n  \r\n  // InputGroupAddon: styled(InputGroupAddon)`\r\n  //     font-size:16px;\r\n  //     font-weight:600;\r\n  //     font-style: normal;\r\n  //     margin-bottom:10px;\r\n  //     margin-top:10px;\r\n  // `,\r\n}\r\n\r\nconst UserForm =  ({ onSubmit, }) => {\r\n\r\n  const emailRef = React.createRef()\r\n  const heroProfecyRef = React.createRef()\r\n  const heroIntroRef = React.createRef()\r\n  const heroMagicRef = React.createRef()\r\n\r\n  const [emailValue, setEmailValue] = useState('')\r\n  const [heroProfecyValue, setHeroProfecyValue] = useState('')\r\n  const [magicValue, setMagicValue] = useState('')\r\n  const [heroIntroValue, setHeroIntroValue] = useState('')\r\n  const [checkData, setCheckData] = useState('')\r\n\r\n\r\n\r\n\r\nconst onSubmitHandler = (event)=> {\r\n  event.preventDefault()\r\n  onSubmit({\r\n      email: emailValue,\r\n      userId: Math.random(),\r\n      hero_profecy: heroProfecyValue,\r\n      hero_intro: heroIntroValue,\r\n      hero_magic: magicValue,\r\n      checked: false\r\n    })\r\n  }\r\n\r\n    return (\r\n    <S.UserForm>\r\n      <S.Content>\r\n        <Form>\r\n        <S.FormGroup>\r\n          <Label for=\"exampleEmail\">Email</Label>\r\n        <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"with a placeholder\" value={emailValue} onChange={(e)=>setEmailValue(e.target.value)} />\r\n        </S.FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"exampleSelect\">Select your hero profecy</Label>\r\n          <S.Input type=\"select\" name=\"select\" id=\"exampleSelect\" value={heroProfecyValue} onChange={(e)=>setHeroProfecyValue(e.target.value)}>\r\n            <option>Necromancer</option>\r\n            <option>Beastmaster</option>\r\n            <option>Druid</option>\r\n            <option>Alchemic</option>\r\n            <option>Witch</option>\r\n            <option>Knight</option>\r\n            <option>Overlord</option>\r\n          </S.Input>\r\n        </FormGroup>\r\n        <S.FormGroup>\r\n          <Label for=\"exampleText\">Introduce your hero :)</Label>\r\n          <S.TextInput type=\"textarea\" name=\"text\" id=\"exampleText\" value={heroIntroValue} onChange={(e)=>setHeroIntroValue(e.target.value)} />\r\n        </S.FormGroup>\r\n        <FormGroup tag=\"fieldset\">\r\n          <legend>Choose Magic</legend>\r\n          <FormGroup check>\r\n            <Label check>\r\n              <Input type=\"radio\" name=\"radio1\"  value='Earth Magic' onChange={(e)=>setMagicValue(e.target.value)}/>{' '}\r\n              Earth Magic\r\n            </Label>\r\n          </FormGroup>\r\n          <FormGroup check>\r\n            <Label check>\r\n              <Input type=\"radio\" name=\"radio1\" value='Water Magic' onChange={(e)=>setMagicValue(e.target.value)} />{' '}\r\n              Water Magic\r\n            </Label>\r\n          </FormGroup>\r\n          <FormGroup check>\r\n            <Label check>\r\n              <Input type=\"radio\" name=\"radio1\" value='Air Magic' onChange={(e)=>setMagicValue(e.target.value)}/>{' '}\r\n              Air Magic\r\n            </Label>\r\n          </FormGroup>\r\n          <FormGroup check>\r\n            <Label check>\r\n              <Input type=\"radio\" name=\"radio1\" value='Fire Magic' onChange={(e)=>setMagicValue(e.target.value)}/>{' '}\r\n              Fire Magic\r\n            </Label>\r\n          </FormGroup>\r\n        </FormGroup>\r\n        <FormGroup check>\r\n          <Label check>\r\n            <Input type=\"checkbox\"  onChange={()=>setCheckData(true)} />{' '}\r\n            Accept all changes\r\n          </Label>\r\n        </FormGroup>\r\n        <Button OnClick={(event)=>onSubmitHandler(event)}>Submit</Button>\r\n      </Form>\r\n    </S.Content>\r\n  </S.UserForm> \r\n    )\r\n   }\r\n\r\n\r\nexport default UserForm"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAqBA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAjEA;AACA;AAkEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAesourceRoot":""}